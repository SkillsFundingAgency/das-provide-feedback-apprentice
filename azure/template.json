{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "botServiceSku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Standard"
            ]
        },
        "microsoftAppCredentials": {
            "type": "secureObject",
            "defaultValue": {
                "Id": "",
                "Password": ""
            }
        },
        "cosmosDbPrimaryReadWriteKey": {
            "type": "securestring"
        },
        "cosmosDbThroughput": {
            "type": "int"
        },
        "botClientCredentials": {
            "type": "secureObject",
            "defaultValue": {
                "BaseAddress": "",
                "AuthToken": "",
                "DirectLineAddress": ""
            }
        },
        "notifyCredentials": {
            "type": "secureObject",
            "defaultValue": {
                "TemplateId": "",
                "SmsSenderId": "",
                "ClientApiKey": ""
            }
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "environmentName": {
            "type": "string"
        },
        "sharedSQLServerName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "subnetObject": {
            "type": "object"
        },
        "subnetServiceEndpointList": {
            "type": "array"
        },
        "subnetDelegations": {
            "type": "array"
        },
        "elasticPoolName": {
            "type": "string"
        },
        "databaseSkuName": {
            "type": "string",
            "defaultValue": "S0"
        },
        "databaseTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "botEndpoint": {
            "type": "string"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "logAnalyticsResourceGroup": {
            "type": "string"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "functionCustomHostname": {
            "type": "string",
            "defaultValue": ""
        },
        "functionCertificateName": {
            "type": "string"
        },
        "botCustomHostname": {
            "type": "string",
            "defaultValue": ""
        },
        "botCertificateName": {
            "type": "string"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "botAdminCommands": {
            "type": "string",
            "defaultValue": "bot_state_expire, bot_state_reset, bot_state_view, bot_dialog_start"
        },
        "apprenticeBatchSize": {
            "type": "int",
            "defaultValue": 5
        },
        "dailySurveyTriggerSchedule": {
            "type": "string"
        },
        "maxRetryAttempts": {
            "type": "int"
        },
        "retryDelayMs": {
            "type": "int"
        },
        "cosmosDbIpRangeFilter": {
            "type": "string",
            "defaultValue": ""
        },
        "conversationExpiryHours": {
            "type": "int"
        },
        "aspSize": {
            "type": "string",
            "defaultValue": "1"
        },
        "aspInstances": {
            "type": "int",
            "defaultValue": 1
        },
        "aspSku": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "appServiceAllowedIPs": {
            "type": "array"
        },
        "functionsExtensionVersion": {
            "type": "string",
            "defaultValue": "~3"
        },
        "sqlConnectionString": {
            "type": "securestring"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "storageAccountName": "[toLower(concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'), 'str'))]",
        "botAppServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
        "botServiceName": "[concat(variables('resourceNamePrefix'), '-bot')]",
        "databaseName": "[concat(variables('resourceNamePrefix'), '-db')]",
        "serviceBusNamespaceName": "[concat(variables('resourceNamePrefix'), '-ns')]",
        "functionAppServiceName": "[concat(variables('resourceNamePrefix'), '-fa')]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
        "cosmosDbName": "[concat(variables('resourceNamePrefix'), '-cdb')]",
        "azureCosmosEndpoint": "[concat('https://', variables('cosmosDbName'), '.documents.azure.com:443/')]",
        "data": {
            "DatabaseName": "ApprenticeFeedback",
            "FeedbackTable": "Feedback",
            "ApprenticeSurveyDetailTable": "Apprentice-Survey-Details",
            "ConversationLogTable": "Conversations",
            "ConversationLogPartitionKey": "/conversation/id",
            "SessionStateTable": "feedback-bot-sessions",
            "SessionLogTable": "Sessions",
            "SessionLogPartitionKey": "/mobile_number"
        },
        "queues": {
            "OutgoingMessageQueueName": "sms-outgoing-messages",
            "IncomingMessageQueueName": "sms-incoming-messages",
            "DeliveryReceiptQueueName": "sms-delivery-log"
        }
    },
    "resources": [
        {
            "apiVersion": "2020-10-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {}
        },
        {
            "apiVersion": "2020-10-01",
            "name": "app-service-plan",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('aspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('aspInstances')]"
                    },
                    "nonASETier": {
                        "value": "[parameters('aspSku')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "app-service-subnet",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetObject').name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[parameters('subnetObject').addressSpace]"
                    },
                    "serviceEndpointList": {
                        "value": "[parameters('subnetServiceEndpointList')]"
                    },
                    "delegations": {
                        "value": "[parameters('subnetDelegations')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-10-01",
            "name": "function-app-certificate",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('functionCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    },
                    "serverFarmId": {
                        "value": "[reference('app-service-plan').outputs.appServicePlanId.value]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "bot-certificate",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[not(equals(parameters('botCertificateName'), parameters('functionCertificateName')))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('botCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    },
                    "serverFarmId": {
                        "value": "[reference('app-service-plan').outputs.appServicePlanId.value]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "storage-account",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "allowSharedKeyAccess": {
                        "value": true
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "bot-service-app-insights",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('botAppServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('botAppServiceName')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "function-app-insights",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('functionAppServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('functionAppServiceName')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "bot-app-service",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('botAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference('app-service-subnet').outputs.subnetResourceId.value]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference('bot-service-app-insights').outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "ASPNETCORE_ENVIRONMENT",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "MicrosoftAppId",
                                    "value": "[parameters('microsoftAppCredentials').Id]"
                                },
                                {
                                    "name": "MicrosoftAppPassword",
                                    "value": "[parameters('microsoftAppCredentials').Password]"
                                },
                                {
                                    "name": "Azure:CosmosEndpoint",
                                    "value": "[variables('azureCosmosEndpoint')]"
                                },
                                {
                                    "name": "Azure:CosmosKey",
                                    "value": "[parameters('cosmosDbPrimaryReadWriteKey')]"
                                },
                                {
                                    "name": "Azure:CosmosDefaultThroughput",
                                    "value": "[string(parameters('cosmosDbThroughput'))]"
                                },
                                {
                                    "name": "Data:DatabaseName",
                                    "value": "[variables('data').DatabaseName]"
                                },
                                {
                                    "name": "Data:FeedbackTable",
                                    "value": "[variables('data').FeedbackTable]"
                                },
                                {
                                    "name": "Data:ConversationLogTable",
                                    "value": "[variables('data').ConversationLogTable]"
                                },
                                {
                                    "name": "Data:ConversationLogPartitionKey",
                                    "value": "[variables('data').ConversationLogPartitionKey]"
                                },
                                {
                                    "name": "Data:SessionStateTable",
                                    "value": "[variables('data').SessionStateTable]"
                                },
                                {
                                    "name": "Bot:AdminCommands",
                                    "value": "[string(parameters('botAdminCommands'))]"
                                },
                                {
                                    "name": "Bot:ConversationExpiryHours",
                                    "value": "[string(parameters('conversationExpiryHours'))]"
                                },
                                {
                                    "name": "Notify:OutgoingMessageQueueName",
                                    "value": "[variables('queues').OutgoingMessageQueueName]"
                                },
                                {
                                    "name": "Notify:IncomingMessageQueueName",
                                    "value": "[variables('queues').IncomingMessageQueueName]"
                                }
                            ]
                        }
                    },
                    "appServiceConnectionStrings": {
                        "value": {
                            "array": [
                                {
                                    "name": "Redis",
                                    "connectionString": "[parameters('loggingRedisConnectionString')]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "StorageAccount",
                                    "connectionString": "[reference('storage-account').outputs.storageConnectionString.value]",
                                    "type": "Custom"
                                },
                                {
                                    "name": "ServiceBus",
                                    "connectionString": "[reference('service-bus').outputs.ServiceBusEndpoint.value]",
                                    "type": "Custom"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('botCustomHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(if(equals(parameters('botCertificateName'), parameters('functionCertificateName')), 'function-app-certificate', 'bot-certificate')).outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]",
                "bot-service-app-insights",
                "app-service-plan"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "bot-channel-registrations",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'bot-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "botServiceName": {
                        "value": "[variables('botServiceName')]"
                    },
                    "botServiceSku": {
                        "value": "[parameters('botServiceSku')]"
                    },
                    "botEndpoint": {
                        "value": "[parameters('botEndpoint')]"
                    },
                    "microsoftAppId": {
                        "value": "[parameters('microsoftAppCredentials').Id]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "function-app",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'function-app-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('functionAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference('app-service-subnet').outputs.subnetResourceId.value]"
                    },
                    "functionAppAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "AzureWebJobsStorage",
                                    "value": "[reference('storage-account').outputs.storageConnectionString.value]"
                                },
                                {
                                    "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                    "value": "[reference('function-app-insights').outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "ASPNETCORE_ENVIRONMENT",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "FUNCTIONS_EXTENSION_VERSION",
                                    "value": "[parameters('functionsExtensionVersion')]"
                                },
                                {
                                    "name": "FUNCTIONS_WORKER_RUNTIME",
                                    "value": "dotnet"
                                },
                                {
                                    "name": "AzureCosmosEndpoint",
                                    "value": "[variables('azureCosmosEndpoint')]"
                                },
                                {
                                    "name": "AzureCosmosKey",
                                    "value": "[parameters('cosmosDbPrimaryReadWriteKey')]"
                                },
                                {
                                    "name": "AzureCosmos",
                                    "value": "[string(parameters('cosmosDbThroughput'))]"
                                },
                                {
                                    "name": "DatabaseName",
                                    "value": "[variables('data').DatabaseName]"
                                },
                                {
                                    "name": "FeedbackTable",
                                    "value": "[variables('data').FeedbackTable]"
                                },
                                {
                                    "name": "ApprenticeSurveyDetailTable",
                                    "value": "[variables('data').ApprenticeSurveyDetailTable]"
                                },
                                {
                                    "name": "ConversationLogTable",
                                    "value": "[variables('data').ConversationLogTable]"
                                },
                                {
                                    "name": "ConversationLogPartitionKey",
                                    "value": "[variables('data').ConversationLogPartitionKey]"
                                },
                                {
                                    "name": "SessionLogTable",
                                    "value": "[variables('data').SessionLogTable]"
                                },
                                {
                                    "name": "SessionLogPartitionKey",
                                    "value": "[variables('data').SessionLogPartitionKey]"
                                },
                                {
                                    "name": "SessionStateTable",
                                    "value": "[variables('data').SessionStateTable]"
                                },
                                {
                                    "name": "BotClientAuthToken",
                                    "value": "[parameters('botClientCredentials').AuthToken]"
                                },
                                {
                                    "name": "BotClientBaseAddress",
                                    "value": "[parameters('botClientCredentials').BaseAddress]"
                                },
                                {
                                    "name": "DirectLineAddress",
                                    "value": "[parameters('botClientCredentials').DirectLineAddress]"
                                },
                                {
                                    "name": "NotifyTemplateId",
                                    "value": "[parameters('notifyCredentials').TemplateId]"
                                },
                                {
                                    "name": "NotifySmsSenderId",
                                    "value": "[parameters('notifyCredentials').SmsSenderId]"
                                },
                                {
                                    "name": "NotifyClientApiKey",
                                    "value": "[parameters('notifyCredentials').ClientApiKey]"
                                },
                                {
                                    "name": "ServiceBusConnection",
                                    "value": "[reference('service-bus').outputs.ServiceBusEndpoint.value]"
                                },
                                {
                                    "name": "DailySurveyTriggerSchedule",
                                    "value": "[string(parameters('dailySurveyTriggerSchedule'))]"
                                },
                                {
                                    "name": "ApprenticeBatchSize",
                                    "value": "[string(parameters('apprenticeBatchSize'))]"
                                },
                                {
                                    "name": "MaxRetryAttempts",
                                    "value": "[string(parameters('maxRetryAttempts'))]"
                                },
                                {
                                    "name": "RetryDelayMs",
                                    "value": "[string(parameters('retryDelayMs'))]"
                                },
                                {
                                    "name": "OutgoingMessageQueueName",
                                    "value": "[variables('queues').OutgoingMessageQueueName]"
                                },
                                {
                                    "name": "IncomingMessageQueueName",
                                    "value": "[variables('queues').IncomingMessageQueueName]"
                                },
                                {
                                    "name": "DeliveryReceiptQueueName",
                                    "value": "[variables('queues').DeliveryReceiptQueueName]"
                                },
                                {
                                    "name": "SqlConnectionString",
                                    "value": "[parameters('sqlConnectionString')]"
                                },
                                {
                                    "name": "WEBSITE_RUN_FROM_PACKAGE",
                                    "value": "1"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('functionCustomHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference('function-app-certificate').outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]",
                "function-app-insights",
                "app-service-plan"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "service-bus",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'service-bus.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceBusNamespaceName": {
                        "value": "[variables('serviceBusNamespaceName')]"
                    },
                    "serviceBusQueues": {
                        "value": [
                            "[variables('queues').OutgoingMessageQueueName]",
                            "[variables('queues').IncomingMessageQueueName]",
                            "[variables('queues').DeliveryReceiptQueueName]"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "cosmos-db",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'cosmos-db.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbName": {
                        "value": "[variables('cosmosDbName')]"
                    },
                    "cosmosDbType": {
                        "value": "GlobalDocumentDB"
                    },
                    "defaultConsistencyLevel": {
                        "value": "Strong"
                    },
                    "ipRangeFilter": {
                        "value": "[parameters('cosmosDbIpRangeFilter')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "sql-database",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "elasticPoolName": {
                        "value": "[parameters('elasticPoolName')]"
                    },
                    "databaseSkuName": {
                        "value": "[parameters('databaseSkuName')]"
                    },
                    "databaseTier": {
                        "value": "[parameters('databaseTier')]"
                    },
                    "logAnalyticsSubscriptionId": {
                        "value": "[parameters('logAnalyticsSubscriptionId')]"
                    },
                    "logAnalyticsResourceGroup": {
                        "value": "[parameters('logAnalyticsResourceGroup')]"
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        },
        "BotAppServiceName": {
            "type": "string",
            "value": "[variables('botAppServiceName')]"
        },
        "FunctionAppServiceName": {
            "type": "string",
            "value": "[variables('functionAppServiceName')]"
        },
        "DatabaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        }
    }
}
